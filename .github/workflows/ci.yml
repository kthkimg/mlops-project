on:
  push:
    branches:
      - main
jobs:
  vpn-and-ssh-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn          

      - name: Setup VPN config
        run: |
          echo "${{ secrets.CA_CRT }}" > ca.crt
          echo "${{ secrets.SECRET_USERNAME_PASSWORD }}" > secret.txt
          echo "${{ secrets.TLS_KEY }}" > tls.key          

      - name: Connect VPN
        run: sudo openvpn --config ".github/workflows/client.ovpn" --log "vpn.log" --daemon

      # - name: Wait for a VPN connection
      #   timeout-minutes: 1
      #   run: until ping -c1 ${{ secrets.SSH_HOST }}; do sleep 2; done

      # - name: Set up SSH
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
      #     # SSH_PORT: ${{ secrets.SSH_PORT }}
      #     SSH_PORT: 30034
      #     SSH_USER: ${{ secrets.SSH_USER }}
      #   run: |
      #     # SSH 비공개 키 저장
      #     echo "$SSH_PRIVATE_KEY" > id_rsa
      #     chmod 600 id_rsa

      #     # SSH 구성 파일 생성
      #     echo "Host $SSH_HOST
      #     HostName $SSH_HOST
      #     User $SSH_USER
      #     Port $SSH_PORT
      #     StrictHostKeyChecking no" > config

      #     # SSH 연결 테스트 및 명령 실행
      #     ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST 'echo "SSH 연결 성공!"'
      #     # 예시로 서버에서 파일 목록 확인하기
      #     ssh $SSH_USER@$SSH_HOST 'll /data/ephemeral/home/dev'
      - name: Set up SSH key and configuration
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          # SSH 비공개 키를 파일로 저장
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # SSH 설정 파일 생성
          echo "Host remote-server
          HostName $SSH_HOST
          User $SSH_USER
          IdentityFile ~/.ssh/id_rsa
          StrictHostKeyChecking no" > ~/.ssh/config

          # SSH 연결 테스트
          ssh remote-server 'echo "SSH 연결 성공!"'
      # - name: Kill VPN connection
      #   if: always()
      #   run: |
      #     sudo chmod 777 vpn.log
      #     sudo killall openvpn          

      # - name: Upload VPN logs
      #   uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: VPN logs
      #     path: vpn.log
